{
  "info": {
    "name": "TodoApp API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Login - Valid",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"username\":\"test\",\"password\":\"1234\"}"
        },
        "url": { "raw": "http://localhost:5000/login", "protocol": "http", "host": ["localhost"], "port": "5000", "path": ["login"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Token present\", function () {",
              "    var json = pm.response.json();",
              "    pm.expect(json.token).to.be.a('string');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Login - Invalid",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"username\":\"test\",\"password\":\"wrong\"}"
        },
        "url": { "raw": "http://localhost:5000/login", "protocol": "http", "host": ["localhost"], "port": "5000", "path": ["login"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401\", function () {",
              "    pm.response.to.have.status(401);",
              "});",
              "pm.test(\"Error message\", function () {",
              "    var json = pm.response.json();",
              "    pm.expect(json.error).to.include('Invalid credentials');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Todos (empty)",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token}}" }
        ],
        "url": { "raw": "http://localhost:5000/todos", "protocol": "http", "host": ["localhost"], "port": "5000", "path": ["todos"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Todos is array\", function () {",
              "    var json = pm.response.json();",
              "    pm.expect(json).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create Todo - Valid",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"title\":\"API Test\",\"description\":\"Created by Postman\",\"completed\":false}"
        },
        "url": { "raw": "http://localhost:5000/todos", "protocol": "http", "host": ["localhost"], "port": "5000", "path": ["todos"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "pm.test(\"Todo created\", function () {",
              "    var json = pm.response.json();",
              "    pm.expect(json.title).to.eql('API Test');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create Todo - Invalid (empty title)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"title\":\"\",\"description\":\"Should fail\",\"completed\":false}"
        },
        "url": { "raw": "http://localhost:5000/todos", "protocol": "http", "host": ["localhost"], "port": "5000", "path": ["todos"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "pm.test(\"Error message\", function () {",
              "    var json = pm.response.json();",
              "    pm.expect(json.error).to.include('Title is required');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update Todo - Valid",
      "request": {
        "method": "PUT",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"title\":\"API Updated\",\"description\":\"Updated by Postman\",\"completed\":true}"
        },
        "url": { "raw": "http://localhost:5000/todos/{{todoId}}", "protocol": "http", "host": ["localhost"], "port": "5000", "path": ["todos", "{{todoId}}"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Todo updated\", function () {",
              "    var json = pm.response.json();",
              "    pm.expect(json.title).to.eql('API Updated');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update Todo - Invalid (not found)",
      "request": {
        "method": "PUT",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"title\":\"Not Found\",\"description\":\"Should fail\",\"completed\":false}"
        },
        "url": { "raw": "http://localhost:5000/todos/99999", "protocol": "http", "host": ["localhost"], "port": "5000", "path": ["todos", "99999"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", function () {",
              "    pm.response.to.have.status(404);",
              "});",
              "pm.test(\"Error message\", function () {",
              "    var json = pm.response.json();",
              "    pm.expect(json.error).to.include('not found');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Delete Todo - Valid",
      "request": {
        "method": "DELETE",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token}}" }
        ],
        "url": { "raw": "http://localhost:5000/todos/{{todoId}}", "protocol": "http", "host": ["localhost"], "port": "5000", "path": ["todos", "{{todoId}}"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Todo deleted\", function () {",
              "    var json = pm.response.json();",
              "    pm.expect(json.message).to.include('deleted');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Delete Todo - Invalid (not found)",
      "request": {
        "method": "DELETE",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token}}" }
        ],
        "url": { "raw": "http://localhost:5000/todos/99999", "protocol": "http", "host": ["localhost"], "port": "5000", "path": ["todos", "99999"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", function () {",
              "    pm.response.to.have.status(404);",
              "});",
              "pm.test(\"Error message\", function () {",
              "    var json = pm.response.json();",
              "    pm.expect(json.error).to.include('not found');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
} 